{"version":3,"sources":["webpack:///./src/app/login/login.component.html","webpack:///./src/groups/list/list.component.css","webpack:///./src/app/app.component.css","webpack:///./src/post/user-list/user-list.component.html","webpack:///./src/groups/form/form.component.html","webpack:///./src/groups/detail/detail.component.html","webpack:///./src/post/detail/detail.component.css","webpack:///./src/post/list/list.component.css","webpack:///./src/groups/list/list.component.html","webpack:///./src/groups/form/form.component.css","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/post/form/form.component.html","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/post/post/post.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/groups/detail/detail.component.css","webpack:///./src/post/list/list.component.html","webpack:///./src/post/user-list/user-list.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/app.component.html","webpack:///./src/post/post/post.component.html","webpack:///./src/app/logout/logout.component.css","webpack:///./src/post/detail/detail.component.html","webpack:///./src/post/form/form.component.css","webpack:///./src/post/post/post.component.ts","webpack:///./src/post/user-list/user-list.component.ts","webpack:///./src/post/list/list.component.ts","webpack:///./src/post/form/form.component.ts","webpack:///./src/post/post-routing.modules.ts","webpack:///./src/post/detail/detail.component.ts","webpack:///./src/post/post.module.ts","webpack:///./src/app/shared/data.service.ts","webpack:///./src/app/shared/authentication.guard.ts","webpack:///./src/groups/shared/group.data.service.ts","webpack:///./src/groups/form/form.component.ts","webpack:///./src/groups/detail/detail.component.ts","webpack:///./src/groups/list/list.component.ts","webpack:///./src/groups/group-routing.module.ts","webpack:///./src/groups/groups.module.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/main.ts"],"names":["module","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","post_component_PostComponent","PostComponent","prototype","ngOnInit","__decorate","Object","core","selector","user_list_component_UserListComponent","UserListComponent","this","posts","user_list_component_decorate","list_component_ListComponent","ListComponent","usergroups","othergroups","isUserAuthenticated","list_component_decorate","form_component_FormComponent","FormComponent","postForm","fesm5_forms","Message","Group","createPost","post","console","log","value","form_component_decorate","routes","path","component","post_routing_modules_PostRoutingModule","PostRoutingModule","post_routing_modules_decorate","imports","router","forChild","detail_component_DetailComponent","DetailComponent","deletePost","detail_component_decorate","post_module_PostModule","PostModule","post_module_decorate","declarations","common","data_service_DataService","DataService","http","loggedinUserToken","Authorized","getLoggedInUserToken","length","localStorage","getItem","login","email","password","_this","cookie","document","split","forEach","ele","data","trim","toLowerCase","get","subscribe","token","setItem","navigate","error","headers","X-CSRFToken","logout","Authorization","removeItem","data_service_decorate","providedIn","authentication_guard_AuthenticationGuard","AuthenticationGuard","authService","canActivate","next","state","authentication_guard_decorate","group_data_service_GroupDataService","GroupDataService","authentication","getGroups","getGroup","toString","createGroup","name","description","group_data_service_decorate","form_form_component_FormComponent","groupService","route","params","type","createGroupForm","onCreate","form","form_form_component_decorate","detail_detail_component_DetailComponent","service","userInCurrentGroup","groupId","detail","group","loggedInUserName","adminuser","username","detail_detail_component_decorate","list_list_component_ListComponent","userIsAuthenticated","groups","list_list_component_decorate","group_routing_module_routes","group_routing_module_GroupRoutingModule","GroupRoutingModule","group_routing_module_decorate","groups_module_GroupsModule","GroupsModule","groups_module_decorate","providers","login_component_LoginComponent","LoginComponent","registerView","param","registerForm","password1","loginForm","onRegister","valid","onLogin","login_component_decorate","homepage_component_HomepageComponent","HomepageComponent","homepage_component_decorate","logout_component_LogoutComponent","LogoutComponent","logout_component_decorate","app_routing_module_routes","redirectTo","pathMatch","app_routing_module_AppRoutingModule","AppRoutingModule","app_routing_module_decorate","forRoot","useHash","app_component_AppComponent","AppComponent","title","isAuthenticated","app_component_decorate","app_module_AppModule","AppModule","app_module_decorate","platform_browser","bootstrap","platform_browser_dynamic","bootstrapModule","catch","err"],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n <div *ngIf=\\\"registerView\\\" class=\\\"justify-content-center\\\">\\n    <h1>Sign Up</h1>\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegister(registerForm)\\\">\\n      <label>Username:\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\"/>\\n      </label>\\n      <label>Email\\n        <input type=\\\"email\\\" formControlName=\\\"email\\\"/>\\n      </label>\\n      <label> Password \\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" >\\n      </label>\\n      <label> confirm Password\\n        <input type=\\\"text\\\" formControlName=\\\"password1\\\">\\n      </label>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!registerForm?.valid\\\">Submit</button>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!registerView\\\" class=\\\"justify-content-center\\\">\\n    <h1>Login</h1>\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin(loginForm)\\\">\\n      <label> Username or Email\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\">\\n      </label>\\n      <label> Password\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\"/>\\n      </label>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm?.valid\\\">Login</button>\\n      <button type=\\\"button\\\" (onclick)=\\\"registerView=true\\\">Register</button>\\n    </form>\\n    \\n  </div>\\n</div>\\n\"","module.exports = \".list-group-item{\\r\\n    text-decoration: none;\\r\\n    color:black;\\r\\n}\\r\\n\\r\\n.list-group-item:hover{\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    color:blue;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.title:hover{\\r\\n    cursor:pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ncm91cHMvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtDQUNmOztBQUVEO0lBQ0ksZ0JBQWdCO0NBQ25COztBQUVEO0lBQ0ksV0FBVztJQUNYLDJCQUEyQjtDQUM5Qjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEIiLCJmaWxlIjoic3JjL2dyb3Vwcy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3VwLWl0ZW17XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjpibGFjaztcclxufVxyXG5cclxuLmxpc3QtZ3JvdXAtaXRlbTpob3ZlcntcclxuICAgIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLnRpdGxle1xyXG4gICAgY29sb3I6Ymx1ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcblxyXG4udGl0bGU6aG92ZXJ7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxufSJdfQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"post=-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h1>@Place Post username</h1>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <post-detail *ngFor=\\\"let post of posts\\\" [post]=\\\"post\\\"></post-detail>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <h4 *ngIf = \\\"type=='create'\\\">Create New Group</h4>\\n        <h4 *ngIf = \\\"type=='update'\\\">Update Group</h4>\\n        <form  [formGroup]=\\\"createGroupForm\\\" (ngSubmit)=\\\"onCreate(createGroupForm)\\\">\\n            <label>Name:\\n              <input type=\\\"text\\\" formControlName=\\\"name\\\"/>\\n            </label>\\n            <label>Description\\n              <input type=\\\"text\\\" formControlName=\\\"description\\\"/>\\n            </label>\\n            <!--Create a drop down for selecting members-->\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <!--Group Name from backend-->\\n        <div class=\\\"col-md-8\\\">\\n          <h1> {{group?.name}} </h1>\\n          <br>\\n          <h2>Member Count : {{group?.members?.length}}</h2>\\n          <br>\\n          <div class=\\\"content\\\">\\n            <ng-template [ngIf]=\\\"userInCurrentGroup\\\">\\n              <!-- pass group slug to leave url-->\\n              <a href=\\\"\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                Group Leave <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\n              </a>\\n              <a *ngIf=\\\"group?.adminuser?.username == loggedInUserName\\\" routerLink=\\\"['group','update']\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                Group Update <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\n              </a>\\n            </ng-template>\\n            <ng-template [ngIf]=\\\"!userInCurrentGroup\\\">\\n              <!-- pass group slug to join url-->\\n              <a href=\\\"\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                  Group Join <span class=\\\"glyphicon glyphicon-ok-circle\\\"></span>\\n              </a>\\n            </ng-template>\\n          </div>\\n        </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class = \\\"col-md-8\\\">\\n          <ul *ngIf=\\\"posts.length > 0;else noPostMessage\\\">\\n              <post-list></post-list>\\n          </ul>\\n          <ng-template #noPostMessage>\\n            <h2>No posts in this group yet!</h2>\\n          </ng-template>          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9kZXRhaWwvZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"content\\\">\\n            <ng-template [ngIf]=\\\"userIsAuthenticated\\\">\\n              <h2>Welcome Back!</h2>\\n              <!-- take to posts of the user on click-->\\n              <a href=\\\"\\\">\\n                @User Name\\n              </a>\\n            </ng-template>\\n            <h2>Groups</h2>\\n            <p>Welcome to the groups page!</p>\\n            <ng-template [ngIf]=\\\"userIsAuthenticated\\\">\\n              <!--Take user to create Group form-->\\n                <a href=\\\"\\\" class=\\\"btn btn-md btn-fill btn-warning\\\">\\n                  <span class=\\\"glyphicon glyphicon-plus-sign\\\">Create New Group!</span>\\n                </a>\\n            </ng-template>\\n        </div>\\n      </div>\\n      <div class = col-md-8>\\n        <div class=\\\"list-group\\\">\\n          <ng-template [ngIf]=\\\"groups.length > 0\\\">\\n            <!--Link to that group detail page-->\\n            <a *ngFor=\\\"let group of groups\\\" href=\\\"\\\" class=\\\"list-group-item\\\">\\n              <h3 class=\\\"title list-group-item-heading\\\">{{group.name}}</h3>\\n              <div class=\\\"list-group-item-text container-fluid\\\">\\n                <h5>Description:</h5>\\n                {{group.description}}\\n              </div>\\n              <br>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  Total Members : <span class=\\\"badge\\\">{{group.members.length}}</span>                  \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  Total Posts : <span class='badge'>Group posts count need to be put</span>                  \\n                </div>\\n              </div>\\n            </a>\\n          </ng-template>      \\n        </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3JvdXBzL2Zvcm0vZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"post-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <h4>Create a new post</h4>\\n      <form [formGroup]='postForm' (submit)=\\\"createPost(postForm)\\\">\\n        <label>Message\\n          <input type=\\\"text\\\" formControlName=\\\"Message\\\">\\n        </label>\\n        <!--Add Drop down to select the group for the post-->\\n        <input type=\\\"submit\\\" value=\\\"Post\\\" class=\\\"btn btn-primary btn-large\\\">\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<h1> Welcome to Star Social!</h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9wb3N0L3Bvc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<h1> Thanks for visiting, come back soon! </h1>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3JvdXBzL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"post=-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card card-with-shaddow\\\">\\n          <div class=\\\"content\\\">\\n            <h5 class=\\\"title\\\">Your Groups</h5>\\n            <ul class=\\\"list-unstyled\\\">\\n              <li *ngFor=\\\"let group of usergroups\\\" class='group li-with-bullet'> \\n                <a routerLink=\\\"['group',group.id,'detail']\\\"></a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"card ard-with-shadow\\\">\\n          <div class=\\\"content\\\">\\n            <h5 class='title'>All Groups</h5>\\n            <ul class='list-unstyled'>\\n              <li *ngFor=\\\"let group of othergroups\\\" class='group li-with-bullet'>\\n                <a routerLink=\\\"['group',group.id,'detail']\\\"></a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <ng-template *ngFor=\\\"let post of posts\\\">\\n          <post-detail [post]=\\\"post\\\"></post-detail>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Add A model to display confirm delete -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class='navbar navbar-expand-lg  navbar-light bg-light mynav' role='navigation' id='navbar'>\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\"> Star  Social </a> \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <ng-template [ngIf]=\\\"isAuthenticated()\\\">\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['post','create']\\\">Post</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['group']\\\">Groups</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['group','create']\\\">Create Group</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n            </ng-template>\\n            <ng-template [ngIf]=\\\"!isAuthenticated()\\\">\\n                <li class=\\\"nav-item\\\"><a  class=\\\"nav-link\\\" [routerLink]=\\\"['group']\\\">Groups</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['login',{'type':'login'}]\\\">Log In</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['login',{'type':'signup'}]\\\">Sign Up</a></li>\\n            </ng-template>\\n        </ul>\\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"post-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <post-detail></post-detail>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"post media\\\">\\n          <h3>Replace with Post Message</h3>\\n          <div class=\\\"media-body\\\">\\n            <strong> Replace with UserName by whome post is created</strong>\\n            <h5 class=\\\"media-heading\\\">\\n              <span class=\\\"username\\\">\\n                <a routerLink=\\\"['post',post.username,'userlist']\\\"></a>\\n              </span>\\n              <time class=\\\"time\\\">\\n                Place Post Time\\n              </time>\\n            </h5>\\n            <div class=\\\"media-footer\\\">\\n                <a *ngIf=\\\"isUserAuthenticated\\\"(onclick)=\\\"deletePost(post.id)\\\" class=\\\"btn btn-simple\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove text-danger\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"text-danger icon-label\\\">Delete</span>\\n                </a>\\n            </div>\\n          </div>\\n</div>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9mb3JtL2Zvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  posts:any = []\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public usergroups:any = [];\n  public posts:any = [];\n  public othergroups:any = [];\n  isUserAuthenticated:boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Form,FormGroup,FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'post-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  postForm:FormGroup;\n  constructor() {\n   }\n\n  ngOnInit() {\n    this.postForm = new FormGroup({\n      Message: new FormControl(),\n      Group:new FormControl()\n    })\n  }\n\n  public createPost(post:FormGroup){\n    console.log(post.value.Message);\n  }\n}\n","import { PostComponent } from './post/post.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormComponent } from './form/form.component';\r\n\r\n// Add gaurds for authentication\r\nconst routes:Routes = [\r\n    {path:'post',component:ListComponent},\r\n    {path:'post/:id/detail',component:PostComponent},\r\n    {path:'post/:name/userlist',component:UserListComponent},\r\n    {path:'post/create', component:FormComponent},//add gaurd\r\n    {path:'post/:id/update', component:FormComponent}//add gaurd\r\n]\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class PostRoutingModule{}","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  @Input() post:any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public deletePost(id){\n    console.log(id);\n  }\n}\n","import { PostRoutingModule } from './post-routing.modules';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { ListComponent } from './list/list.component';\nimport { FormComponent } from './form/form.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { PostComponent } from './post/post.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DetailComponent, ListComponent, FormComponent, UserListComponent, PostComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PostRoutingModule,\n  ],\n  exports: [\n    ListComponent\n  ]\n})\nexport class PostModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private loggedinUserToken:string = '';\n  constructor(private http:HttpClient,private router:Router) { }\n\n  public Authorized():boolean{\n    this.getLoggedInUserToken();\n    return this.loggedinUserToken.length > 0 ?  true: false;\n  }\n\n  public getLoggedInUserToken():string{\n    this.loggedinUserToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : this.loggedinUserToken;\n    return this.loggedinUserToken;\n  }\n  \n  public login(email:string,password:string){\n    let cookie = '';\n    document.cookie.split(';').forEach( ele => {\n       let data = ele.split(\"=\");\n       if(data[0].trim().toLowerCase()=='csrftoken'){\n        cookie = data[1];\n       }\n    });\n    this.http.get('api/get-token?username='+email).subscribe((data:any) => {\n      this.loggedinUserToken='Token '+data.token;\n      localStorage.setItem('userToken',this.loggedinUserToken);\n      this.router.navigate(['home']);\n    },\n    (error) => {\n      this.http.post('api/login/',{\n        'email':email,\n        'password':password\n      },{\n        headers:{\n          'X-CSRFToken': cookie\n        }\n      }).subscribe((data:any) => {\n        this.loggedinUserToken='Token '+data.token;\n        localStorage.setItem('userToken',this.loggedinUserToken);\n        this.router.navigate(['home']);\n      });\n    });    \n  }\n\n  public logout(){\n    this.http.get('/api/user/logout/',{\n      headers:{\n        'Authorization':this.loggedinUserToken\n      }\n    }).subscribe(() => {\n      this.loggedinUserToken = '';\n      localStorage.removeItem('usertoken');\n      this.router.navigate(['logout']);\n    });\n  }\n}\n","import { DataService } from './data.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private authService:DataService){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.Authorized();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Group } from './group.interface';\r\nimport { DataService } from 'src/app/shared/data.service';\r\n@Injectable()\r\nexport class GroupDataService {\r\n  loggedinUserToken:string = '';\r\n  constructor(private http:HttpClient,private authentication:DataService) { }\r\n\r\n  public getGroups():Observable<Group[]>{\r\n    return this.http.get<Group[]>(\"api/group/\");\r\n  }\r\n\r\n  public getGroup(id:number):Observable<Group>{\r\n      return this.http.get<Group>('api/group/'+id.toString()+'/',{headers:{'Authorization':this.authentication.getLoggedInUserToken()}});\r\n  }\r\n\r\n  public createGroup(name:string, description:string):Observable<any>{\r\n     return this.http.post<any>('api/group/',\r\n     {\r\n         'name':name,\r\n         'description':description\r\n     },\r\n     {\r\n         headers:{\r\n             'Authorization':this.authentication.getLoggedInUserToken()\r\n            }\r\n    });\r\n  }\r\n}\r\n","import { ActivatedRoute } from '@angular/router';\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { GroupDataService } from '../shared/group.data.service';\n@Component({\n  selector: 'group-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  public type:string;\n  public createGroupForm:FormGroup;\n  constructor(private groupService:GroupDataService, private route:ActivatedRoute) {\n    this.route.params.subscribe((data)=>{\n      this.type = data.type ? data.type.toLowerCase() : 'create';\n    });\n   }\n\n  ngOnInit() {\n    \n    this.createGroupForm = new FormGroup({\n      name : new FormControl(),\n      description : new FormControl()\n    })\n  }\n\n  onCreate(form:FormGroup){\n    this.groupService.createGroup(form.value.name, form.value.description).subscribe();\n  }\n}\n","import { GroupDataService } from './../shared/group.data.service';\nimport { DataService } from './../../app/shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Group } from '../shared/group.interface';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'group-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  public userInCurrentGroup:boolean = true;\n  public posts:any = [];\n  public group:Group;\n  public loggedInUserName:String;\n\n  constructor(private service:DataService,\n    private groupService:GroupDataService,\n    private router:ActivatedRoute) { \n    this.router.params.subscribe(groupId => {\n      this.groupService.getGroup(groupId.id).subscribe((detail:Group) => {\n        this.group = detail;\n        this.loggedInUserName = detail.adminuser.username; // needs to be changed to dataservice\n      });\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  isUserAuthenticated():boolean{\n    return this.service.Authorized();\n  }\n\n}\n","import { GroupDataService } from './../shared/group.data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Group } from '../shared/group.interface';\n\n@Component({\n  selector: 'group-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public userIsAuthenticated:boolean = false;\n  public groups:Group[]=[];\n  \n  constructor(private groupService:GroupDataService) { \n    this.groupService.getGroups().subscribe((data:Group[])=>{\n      this.groups = data;\n    });\n  }\n\n  ngOnInit() {\n   \n  }\n\n}\n","import { AuthenticationGuard } from './../app/shared/authentication.guard';\r\nimport { FormComponent } from './form/form.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nconst routes:Routes = [\r\n    {path:'group',component:ListComponent},\r\n    {path:'group/:id/detail',component:DetailComponent, canActivate:[AuthenticationGuard]},\r\n    {path:'group/:type',component:FormComponent, canActivate:[AuthenticationGuard]},\r\n]\r\n\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class GroupRoutingModule{}","import { HttpClientModule } from '@angular/common/http';\nimport { PostModule } from './../post/post.module';\nimport { GroupRoutingModule } from './group-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { FormComponent } from './form/form.component';\nimport { ListComponent } from './list/list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GroupDataService } from './shared/group.data.service';\n\n@NgModule({\n  declarations: [DetailComponent, FormComponent, ListComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    GroupRoutingModule,\n    PostModule,\n    HttpClientModule\n  ],\n  providers:[\n    GroupDataService\n  ]\n})\nexport class GroupsModule { }\n","import { DataService } from './../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  registerForm:FormGroup;\n  loginForm:FormGroup;\n  registerView:boolean = false;\n  constructor(private service:DataService,private route:ActivatedRoute) {\n    this.route.params.subscribe(param => {\n      if(param['type'] == 'signup'){\n        this.registerView = true;\n      }else{\n        this.registerView = false;\n      }\n    });\n   }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl(),\n      email: new FormControl(),\n      password: new FormControl(),\n      password1: new FormControl()\n    });\n    \n    this.loginForm = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  onRegister(form: FormGroup){\n    console.log('Valid?', form.valid);\n    console.log('Name',form.value.username);\n  }\n\n  onLogin(form:FormGroup){\n    this.service.login(form.value.username,form.value.password);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DataService } from './../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private service: DataService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { LoginComponent } from './login/login.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogoutComponent } from './logout/logout.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomepageComponent},\n  {path:'logout', component: LogoutComponent},\n  {path: 'login',component: LoginComponent},\n  {path: '*', redirectTo: \"['/login',{'type':'login'}]\",pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { DataService } from './shared/data.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'simplesocial';\n\n  constructor(private service:DataService){\n\n  }\n\n  public isAuthenticated():boolean{\n    return this.service.Authorized();\n  }\n\n  public logout(){\n    this.service.logout();\n  }\n}\n","import { PostModule } from '../post/post.module';\nimport { GroupsModule } from '../groups/groups.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    LoginComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    GroupsModule,\n    PostModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}