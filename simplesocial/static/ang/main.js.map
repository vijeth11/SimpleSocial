{"version":3,"sources":["webpack:///./src/app/login/login.component.html","webpack:///./src/groups/list/list.component.css","webpack:///./src/app/app.component.css","webpack:///./src/post/user-list/user-list.component.html","webpack:///./src/groups/form/form.component.html","webpack:///./src/groups/detail/detail.component.html","webpack:///./src/post/detail/detail.component.css","webpack:///./src/post/list/list.component.css","webpack:///./src/groups/list/list.component.html","webpack:///./src/groups/form/form.component.css","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/post/form/form.component.html","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/post/post/post.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/groups/detail/detail.component.css","webpack:///./src/post/list/list.component.html","webpack:///./src/post/user-list/user-list.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/app.component.html","webpack:///./src/post/post/post.component.html","webpack:///./src/app/logout/logout.component.css","webpack:///./src/post/detail/detail.component.html","webpack:///./src/post/form/form.component.css","webpack:///./src/post/post/post.component.ts","webpack:///./src/post/user-list/user-list.component.ts","webpack:///./src/post/list/list.component.ts","webpack:///./src/post/form/form.component.ts","webpack:///./src/post/post-routing.modules.ts","webpack:///./src/post/detail/detail.component.ts","webpack:///./src/post/post.module.ts","webpack:///./src/app/shared/data.service.ts","webpack:///./src/app/shared/authentication.guard.ts","webpack:///./src/groups/shared/group.data.service.ts","webpack:///./src/groups/form/form.component.ts","webpack:///./src/groups/detail/detail.component.ts","webpack:///./src/groups/list/list.component.ts","webpack:///./src/groups/group-routing.module.ts","webpack:///./src/groups/groups.module.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/main.ts"],"names":["module","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","post_component_PostComponent","PostComponent","prototype","ngOnInit","__decorate","Object","core","selector","user_list_component_UserListComponent","UserListComponent","this","posts","user_list_component_decorate","list_component_ListComponent","ListComponent","usergroups","othergroups","isUserAuthenticated","list_component_decorate","form_component_FormComponent","FormComponent","postForm","fesm5_forms","Message","Group","createPost","post","console","log","value","form_component_decorate","routes","path","component","post_routing_modules_PostRoutingModule","PostRoutingModule","post_routing_modules_decorate","imports","fesm5_router","forChild","detail_component_DetailComponent","DetailComponent","deletePost","detail_component_decorate","post_module_PostModule","PostModule","post_module_decorate","declarations","common","data_service_DataService","DataService","http","router","loggedinUserToken","userName","isUserLoggedIn","Subject","next","getUserName","Authorized","getLoggedInUserToken","length","localStorage","getItem","setLoginTokenandUsername","username","token","setItem","login","email","password","_this","cookie","document","split","forEach","ele","data","trim","toLowerCase","get","subscribe","navigate","error","headers","X-CSRFToken","logout","Authorization","removeItem","data_service_decorate","providedIn","fesm5_http","authentication_guard_AuthenticationGuard","AuthenticationGuard","authService","canActivate","state","authentication_guard_decorate","group_data_service_GroupDataService","GroupDataService","authentication","getGroups","getGroup","toString","createGroup","name","description","leaveGroup","groupid","delete","group_data_service_decorate","form_form_component_FormComponent","groupService","route","displaySuccessMessage","params","type","createGroupForm","onCreate","form","setTimeout","form_form_component_decorate","detail_detail_component_DetailComponent","service","userInCurrentGroup","groupId","detail","group","loggedInUserName","isLoggedInUserAdmin","adminUser","event","preventDefault","success","detail_detail_component_decorate","list_list_component_ListComponent","userIsAuthenticated","groups","loadTheGroup","list_list_component_decorate","group_routing_module_routes","group_routing_module_GroupRoutingModule","GroupRoutingModule","group_routing_module_decorate","groups_module_GroupsModule","GroupsModule","groups_module_decorate","providers","login_component_LoginComponent","LoginComponent","registerView","param","registerForm","password1","loginForm","onRegister","valid","onLogin","login_component_decorate","homepage_component_HomepageComponent","HomepageComponent","homepage_component_decorate","logout_component_LogoutComponent","LogoutComponent","logout_component_decorate","app_routing_module_routes","redirectTo","pathMatch","app_routing_module_AppRoutingModule","AppRoutingModule","app_routing_module_decorate","forRoot","useHash","app_component_AppComponent","AppComponent","title","isAuthenticated","app_component_decorate","app_module_AppModule","AppModule","app_module_decorate","platform_browser","bootstrap","platform_browser_dynamic","bootstrapModule","catch","err"],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n <div *ngIf=\\\"registerView\\\" class=\\\"justify-content-center\\\">\\n    <h1>Sign Up</h1>\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegister(registerForm)\\\">\\n      <label>Username:\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\"/>\\n      </label>\\n      <label>Email\\n        <input type=\\\"email\\\" formControlName=\\\"email\\\"/>\\n      </label>\\n      <label> Password \\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" >\\n      </label>\\n      <label> confirm Password\\n        <input type=\\\"text\\\" formControlName=\\\"password1\\\">\\n      </label>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!registerForm?.valid\\\">Submit</button>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!registerView\\\" class=\\\"justify-content-center\\\">\\n    <h1>Login</h1>\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin(loginForm)\\\">\\n      <label> Username or Email\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\">\\n      </label>\\n      <label> Password\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\"/>\\n      </label>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm?.valid\\\">Login</button>\\n      <button type=\\\"button\\\" (onclick)=\\\"registerView=true\\\">Register</button>\\n    </form>\\n    \\n  </div>\\n</div>\\n\"","module.exports = \".list-group-item{\\r\\n    text-decoration: none;\\r\\n    color:black;\\r\\n}\\r\\n\\r\\n.list-group-item:hover{\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    color:blue;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.title:hover{\\r\\n    cursor:pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ncm91cHMvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtDQUNmOztBQUVEO0lBQ0ksZ0JBQWdCO0NBQ25COztBQUVEO0lBQ0ksV0FBVztJQUNYLDJCQUEyQjtDQUM5Qjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEIiLCJmaWxlIjoic3JjL2dyb3Vwcy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3VwLWl0ZW17XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjpibGFjaztcclxufVxyXG5cclxuLmxpc3QtZ3JvdXAtaXRlbTpob3ZlcntcclxuICAgIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLnRpdGxle1xyXG4gICAgY29sb3I6Ymx1ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcblxyXG4udGl0bGU6aG92ZXJ7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxufSJdfQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"post=-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h1>@Place Post username</h1>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <post-detail *ngFor=\\\"let post of posts\\\" [post]=\\\"post\\\"></post-detail>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <h4 *ngIf = \\\"type=='create'\\\">Create New Group</h4>\\n        <h4 *ngIf = \\\"type=='update'\\\">Update Group</h4>\\n        <form  [formGroup]=\\\"createGroupForm\\\" (ngSubmit)=\\\"onCreate(createGroupForm)\\\">\\n            <label>Name:\\n              <input type=\\\"text\\\" formControlName=\\\"name\\\"/>\\n            </label>\\n            <label>Description\\n              <input type=\\\"text\\\" formControlName=\\\"description\\\"/>\\n            </label>\\n            <!--Create a drop down for selecting members-->\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"displaySuccessMessage\\\">\\n      <div class=\\\"col-md-12 success\\\">\\n        <h1>Success fully {{type}}ed</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <!--Group Name from backend-->\\n        <div class=\\\"col-md-8\\\">\\n          <h1> {{group?.name}} </h1>\\n          <br>\\n          <h2>Member Count : {{group?.members?.length}}</h2>\\n          <br>\\n          <div class=\\\"content\\\">\\n            <ng-template [ngIf]=\\\"userInCurrentGroup\\\">\\n              <!-- pass group slug to leave url-->\\n              <button (click)=\\\"leaveGroup(group.id,$event)\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                Group Leave <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\n              </button>\\n              <a *ngIf=\\\"isLoggedInUserAdmin()\\\" [routerLink]=\\\"['../../../','group','update']\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                Group Update <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span>\\n              </a>\\n            </ng-template>\\n            <ng-template [ngIf]=\\\"!userInCurrentGroup\\\">\\n              <!-- pass group slug to join url-->\\n              <a href=\\\"\\\" class = \\\"btn btn-lg btn-fill btn-warning\\\"> \\n                  Group Join <span class=\\\"glyphicon glyphicon-ok-circle\\\"></span>\\n              </a>\\n            </ng-template>\\n          </div>\\n        </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class = \\\"col-md-8\\\">\\n          <ul *ngIf=\\\"posts.length > 0;else noPostMessage\\\">\\n              <post-list></post-list>\\n          </ul>\\n          <ng-template #noPostMessage>\\n            <h2>No posts in this group yet!</h2>\\n          </ng-template>          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9kZXRhaWwvZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"group-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"content\\\">\\n            <ng-template [ngIf]=\\\"userIsAuthenticated\\\">\\n              <h2>Welcome Back!</h2>\\n              <!-- take to posts of the user on click-->\\n              <a href=\\\"\\\">\\n                @{{username}}\\n              </a>\\n            </ng-template>\\n            <h2>Groups</h2>\\n            <p>Welcome to the groups page!</p>\\n            <ng-template [ngIf]=\\\"userIsAuthenticated\\\">\\n              <!--Take user to create Group form-->\\n                <a [routerLink]=\\\"['create']\\\" routerLinkActive=\\\"router-link-active\\\"  class=\\\"btn btn-md btn-fill btn-warning\\\">\\n                  <span class=\\\"glyphicon glyphicon-plus-sign\\\">Create New Group!</span>\\n                </a>\\n            </ng-template>\\n        </div>\\n      </div>\\n      <div class = col-md-8>\\n        <div class=\\\"list-group\\\">\\n          <ng-template [ngIf]=\\\"groups.length > 0\\\">\\n            <!--Link to that group detail page-->\\n            <a *ngFor=\\\"let group of groups\\\" class=\\\"list-group-item\\\">\\n              <h3 (click) = \\\"loadTheGroup(group.id)\\\"class=\\\"title list-group-item-heading\\\">{{group.name}}</h3>\\n              <div class=\\\"list-group-item-text container-fluid\\\">\\n                <h5>Description:</h5>\\n                {{group.description}}\\n              </div>\\n              <br>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  Total Members : <span class=\\\"badge\\\">{{group.members.length}}</span>                  \\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  Total Posts : <span class='badge'>Group posts count need to be put</span>                  \\n                </div>\\n              </div>\\n            </a>\\n          </ng-template>      \\n        </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".success{\\r\\n    color:green;\\r\\n    background-color:lightgreen;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9ncm91cHMvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osNEJBQTRCO0NBQy9CIiwiZmlsZSI6InNyYy9ncm91cHMvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VjY2Vzc3tcclxuICAgIGNvbG9yOmdyZWVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjpsaWdodGdyZWVuO1xyXG59Il19 */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"post-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <h4>Create a new post</h4>\\n      <form [formGroup]='postForm' (submit)=\\\"createPost(postForm)\\\">\\n        <label>Message\\n          <input type=\\\"text\\\" formControlName=\\\"Message\\\">\\n        </label>\\n        <!--Add Drop down to select the group for the post-->\\n        <input type=\\\"submit\\\" value=\\\"Post\\\" class=\\\"btn btn-primary btn-large\\\">\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<h1> Welcome to Star Social!</h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9wb3N0L3Bvc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<h1> Thanks for visiting, come back soon! </h1>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZ3JvdXBzL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"post=-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card card-with-shaddow\\\">\\n          <div class=\\\"content\\\">\\n            <h5 class=\\\"title\\\">Your Groups</h5>\\n            <ul class=\\\"list-unstyled\\\">\\n              <li *ngFor=\\\"let group of usergroups\\\" class='group li-with-bullet'> \\n                <a routerLink=\\\"['group',group.id,'detail']\\\"></a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"card ard-with-shadow\\\">\\n          <div class=\\\"content\\\">\\n            <h5 class='title'>All Groups</h5>\\n            <ul class='list-unstyled'>\\n              <li *ngFor=\\\"let group of othergroups\\\" class='group li-with-bullet'>\\n                <a routerLink=\\\"['group',group.id,'detail']\\\"></a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <ng-template *ngFor=\\\"let post of posts\\\">\\n          <post-detail [post]=\\\"post\\\"></post-detail>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Add A model to display confirm delete -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class='navbar navbar-expand-lg  navbar-light bg-light mynav' role='navigation' id='navbar'>\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\"> Star  Social </a> \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <ng-template [ngIf]=\\\"isAuthenticated\\\">\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['post','create']\\\">Post</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['group']\\\">Groups</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['group','create']\\\">Create Group</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n            </ng-template>\\n            <ng-template [ngIf]=\\\"!isAuthenticated\\\">\\n                <li class=\\\"nav-item\\\"><a  class=\\\"nav-link\\\" [routerLink]=\\\"['group']\\\">Groups</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['login',{'type':'login'}]\\\">Log In</a></li>\\n                <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"[routerLink]=\\\"['login',{'type':'signup'}]\\\">Sign Up</a></li>\\n            </ng-template>\\n        </ul>\\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"post-page\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <post-detail></post-detail>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"post media\\\">\\n          <h3>Replace with Post Message</h3>\\n          <div class=\\\"media-body\\\">\\n            <strong> Replace with UserName by whome post is created</strong>\\n            <h5 class=\\\"media-heading\\\">\\n              <span class=\\\"username\\\">\\n                <a routerLink=\\\"['post',post.username,'userlist']\\\"></a>\\n              </span>\\n              <time class=\\\"time\\\">\\n                Place Post Time\\n              </time>\\n            </h5>\\n            <div class=\\\"media-footer\\\">\\n                <a *ngIf=\\\"isUserAuthenticated\\\"(onclick)=\\\"deletePost(post.id)\\\" class=\\\"btn btn-simple\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove text-danger\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"text-danger icon-label\\\">Delete</span>\\n                </a>\\n            </div>\\n          </div>\\n</div>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcG9zdC9mb3JtL2Zvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  posts:any = []\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public usergroups:any = [];\n  public posts:any = [];\n  public othergroups:any = [];\n  isUserAuthenticated:boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Form,FormGroup,FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'post-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  postForm:FormGroup;\n  constructor() {\n   }\n\n  ngOnInit() {\n    this.postForm = new FormGroup({\n      Message: new FormControl(),\n      Group:new FormControl()\n    })\n  }\n\n  public createPost(post:FormGroup){\n    console.log(post.value.Message);\n  }\n}\n","import { PostComponent } from './post/post.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormComponent } from './form/form.component';\r\n\r\n// Add gaurds for authentication\r\nconst routes:Routes = [\r\n    {path:'post',component:ListComponent},\r\n    {path:'post/:id/detail',component:PostComponent},\r\n    {path:'post/:name/userlist',component:UserListComponent},\r\n    {path:'post/create', component:FormComponent},//add gaurd\r\n    {path:'post/:id/update', component:FormComponent}//add gaurd\r\n]\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class PostRoutingModule{}","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'post-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  @Input() post:any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public deletePost(id){\n    console.log(id);\n  }\n}\n","import { PostRoutingModule } from './post-routing.modules';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { ListComponent } from './list/list.component';\nimport { FormComponent } from './form/form.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { PostComponent } from './post/post.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [DetailComponent, ListComponent, FormComponent, UserListComponent, PostComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PostRoutingModule,\n  ],\n  exports: [\n    ListComponent\n  ]\n})\nexport class PostModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private loggedinUserToken:string = '';\n  private userName:string ='';\n  public isUserLoggedIn:Subject<boolean> = new Subject<boolean>();\n  constructor(private http:HttpClient,private router:Router) { \n    this.isUserLoggedIn.next(false);\n  }\n\n  public getUserName():string{\n    return this.userName;\n  }\n  public Authorized():boolean{\n    this.getLoggedInUserToken();\n    this.isUserLoggedIn.next(this.loggedinUserToken.length > 0);\n    return this.loggedinUserToken.length > 0 ?  true: false;\n  }\n\n  public getLoggedInUserToken():string{\n    this.loggedinUserToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : this.loggedinUserToken;\n    this.userName = localStorage.getItem('username') ? localStorage.getItem('username') : this.userName;\n    return this.loggedinUserToken;\n  }\n  \n  private setLoginTokenandUsername(username:string,token:string){\n      this.loggedinUserToken='Token '+token;\n      localStorage.setItem('userToken',this.loggedinUserToken);\n      this.userName = username;\n      localStorage.setItem('username',username);\n  }\n\n  public login(email:string,password:string){\n    let cookie = '';\n    document.cookie.split(';').forEach( ele => {\n       let data = ele.split(\"=\");\n       if(data[0].trim().toLowerCase()=='csrftoken'){\n        cookie = data[1];\n       }\n    });\n    this.http.get('api/get-token?username='+email).subscribe((data:any) => {\n      this.isUserLoggedIn.next(true);\n      this.setLoginTokenandUsername(email,data.token);\n      this.router.navigate(['home']);\n    },\n    (error) => {\n      this.http.post('api/login/',{\n        'email':email,\n        'password':password\n      },{\n        headers:{\n          'X-CSRFToken': cookie\n        }\n      }).subscribe((data:any) => {\n        this.isUserLoggedIn.next(true);\n        this.setLoginTokenandUsername(email,data.token);\n        this.router.navigate(['home']);\n      });\n    });    \n  }\n\n  public logout(){\n    this.http.get('/api/user/logout/',{\n      headers:{\n        'Authorization':this.loggedinUserToken\n      }\n    }).subscribe(() => {\n      this.loggedinUserToken = '';\n      localStorage.removeItem('userToken');\n      this.isUserLoggedIn.next(false);\n      this.router.navigate(['logout']);\n    });\n  }\n}\n","import { DataService } from './data.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private authService:DataService){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.authService.Authorized();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Group } from './group.interface';\r\nimport { DataService } from 'src/app/shared/data.service';\r\n@Injectable()\r\nexport class GroupDataService {\r\n  loggedinUserToken:string = '';\r\n  constructor(private http:HttpClient,private authentication:DataService) { }\r\n\r\n  public getGroups():Observable<Group[]>{\r\n    return this.http.get<Group[]>(\"api/group-list/\");\r\n  }\r\n\r\n  public getGroup(id:number):Observable<Group>{\r\n      return this.http.get<Group>('api/group/'+id.toString()+'/',{headers:{'Authorization':this.authentication.getLoggedInUserToken()}});\r\n  }\r\n\r\n  public createGroup(name:string, description:string):Observable<any>{\r\n     return this.http.post<any>('api/group/',\r\n     {\r\n         'name':name,\r\n         'description':description\r\n     },\r\n     {\r\n         headers:{\r\n             'Authorization':this.authentication.getLoggedInUserToken()\r\n            }\r\n    });\r\n  }\r\n\r\n  public leaveGroup(groupid:number):Observable<any>{    \r\n    return this.http.delete<any>('api/group/'+groupid.toString()+'/deletemember/1/',\r\n    {\r\n      headers:{\r\n        'Authorization':this.authentication.getLoggedInUserToken()\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { GroupDataService } from '../shared/group.data.service';\n@Component({\n  selector: 'group-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  public type:string;\n  public createGroupForm:FormGroup;\n  public displaySuccessMessage:boolean = false;\n\n  constructor(\n    private groupService:GroupDataService, \n    private route:ActivatedRoute,\n    private router:Router\n    ) {\n    this.route.params.subscribe((data)=>{\n      this.type = data.type ? data.type.toLowerCase() : 'create';\n    });\n   }\n\n  ngOnInit() {\n    \n    this.createGroupForm = new FormGroup({\n      name : new FormControl(),\n      description : new FormControl()\n    })\n  }\n\n  onCreate(form:FormGroup){\n    this.groupService.createGroup(form.value.name, form.value.description).subscribe(()=>{\n      this.displaySuccessMessage = true;\n      setTimeout(()=>{\n        this.displaySuccessMessage = false;\n        this.router.navigate(['group']);\n      },10000)\n    });\n  }\n}\n","import { GroupDataService } from './../shared/group.data.service';\nimport { DataService } from './../../app/shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Group } from '../shared/group.interface';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'group-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  public userInCurrentGroup:boolean = true;\n  public posts:any = [];\n  public group:Group;\n  public loggedInUserName:String;\n\n  constructor(private service:DataService,\n    private groupService:GroupDataService,\n    private router:ActivatedRoute) { \n    this.router.params.subscribe(groupId => {\n      this.groupService.getGroup(groupId.id).subscribe((detail:Group) => {\n        this.group = detail;\n        this.loggedInUserName = this.service.getUserName(); \n        //this.userInCurrentGroup = this.group.members.findIndex((element) => {return element.email==this.loggedInUserName;}) > -1;\n      });\n    })\n  }\n  \n  public isLoggedInUserAdmin():boolean{\n    if(this.group && this.group.adminUser){\n    return this.group.adminUser.email == this.loggedInUserName;\n    }else{\n      return false;\n    }\n  }\n  ngOnInit() {\n  }\n\n  isUserAuthenticated():boolean{\n    return this.service.Authorized();\n  }\n\n  leaveGroup(groupId:number,event:any){\n    event.preventDefault();\n    this.groupService.leaveGroup(groupId).subscribe(success=>{},error =>{\n      console.log(error);\n    })\n  }\n}\n","import { GroupDataService } from './../shared/group.data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Group } from '../shared/group.interface';\nimport { DataService } from 'src/app/shared/data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'group-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public userIsAuthenticated:boolean = false;\n  public groups:Group[]=[];\n  public username:string=''\n  \n  constructor(\n    private groupService:GroupDataService,\n    private service:DataService,\n    private router:Router\n    ) { \n    this.userIsAuthenticated = this.service.Authorized();\n    if(this.userIsAuthenticated){\n      this.username = this.service.getUserName();\n    }\n    this.groupService.getGroups().subscribe((data:Group[])=>{\n      this.groups = data;\n    });\n  }\n\n  ngOnInit() {\n   \n  }\n\n  public loadTheGroup(id:number){\n    this.router.navigate(['group',id,'detail']);\n  }\n}\n","import { AuthenticationGuard } from './../app/shared/authentication.guard';\r\nimport { FormComponent } from './form/form.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nconst routes:Routes = [\r\n    {path:'group',component:ListComponent},\r\n    {path:'group/:id/detail',component:DetailComponent, canActivate:[AuthenticationGuard]},\r\n    {path:'group/:type',component:FormComponent, canActivate:[AuthenticationGuard]},\r\n]\r\n\r\n\r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports:[RouterModule]\r\n})\r\n\r\nexport class GroupRoutingModule{}","import { HttpClientModule } from '@angular/common/http';\nimport { PostModule } from './../post/post.module';\nimport { GroupRoutingModule } from './group-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { FormComponent } from './form/form.component';\nimport { ListComponent } from './list/list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GroupDataService } from './shared/group.data.service';\n\n@NgModule({\n  declarations: [DetailComponent, FormComponent, ListComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    GroupRoutingModule,\n    PostModule,\n    HttpClientModule\n  ],\n  providers:[\n    GroupDataService\n  ]\n})\nexport class GroupsModule { }\n","import { DataService } from './../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  registerForm:FormGroup;\n  loginForm:FormGroup;\n  registerView:boolean = false;\n  constructor(private service:DataService,private route:ActivatedRoute) {\n    this.route.params.subscribe(param => {\n      if(param['type'] == 'signup'){\n        this.registerView = true;\n      }else{\n        this.registerView = false;\n      }\n    });\n   }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl(),\n      email: new FormControl(),\n      password: new FormControl(),\n      password1: new FormControl()\n    });\n    \n    this.loginForm = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  onRegister(form: FormGroup){\n    console.log('Valid?', form.valid);\n    console.log('Name',form.value.username);\n  }\n\n  onLogin(form:FormGroup){\n    this.service.login(form.value.username,form.value.password);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DataService } from './../shared/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private service: DataService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { LoginComponent } from './login/login.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogoutComponent } from './logout/logout.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomepageComponent},\n  {path:'logout', component: LogoutComponent},\n  {path: 'login',component: LoginComponent},\n  {path: '*', redirectTo: \"['/login',{'type':'login'}]\",pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { DataService } from './shared/data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'simplesocial';\n  isAuthenticated:boolean = false;\n  constructor(private service:DataService){\n    this.isAuthenticated = service.Authorized();\n    \n  }\n  \n  ngOnInit(): void {\n    this.service.isUserLoggedIn.subscribe((data:boolean) => {\n      this.isAuthenticated = data;\n    })\n  }\n\n  \n  public logout(){\n    this.service.logout();\n  }\n}\n","import { PostModule } from '../post/post.module';\nimport { GroupsModule } from '../groups/groups.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    LoginComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    GroupsModule,\n    PostModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}